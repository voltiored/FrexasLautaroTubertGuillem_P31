package prog2.vista;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import prog2.adaptador.Adaptador;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class FrmGestioSistemaRefrigeracio extends JDialog {
    private JPanel contentPane;
    private JCheckBox chkBomba4;
    private JCheckBox chkBomba3;
    private JCheckBox chkBomba2;
    private JCheckBox chkBomba1;
    private JLabel Bomba1;
    private JLabel Bomba2;
    private JLabel Bomba3;
    private JLabel Bomba4;
    private JLabel labelSistemaRefri;
    private JButton btnConfirm;
    JList<String> listBombesForaServei;
    private JLabel lblForadeServei;
    private Adaptador adaptador;
    private DefaultListModel<String> modelBombesForaServei;

    public FrmGestioSistemaRefrigeracio(FrmGestioComponentsCentral parent, Adaptador adaptador) {
        super(parent, "Gestió Refrigeració", true);
        this.adaptador = adaptador;

        setContentPane(contentPane);
        setModal(true);
        setSize(600, 300);
        setLocationRelativeTo(parent);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        String[] llistaBombes = adaptador.mostrarSistemaRefrigeracio().split("\n");
        JCheckBox[] bombes = {chkBomba1, chkBomba2, chkBomba3, chkBomba4};
        for(int i = 0; i < 4; i++){
            bombes[i].setSelected(FrmGestioComponentsCentral.getBombesActivadesTemp()[i]);
            bombes[i].setEnabled(!llistaBombes[i].toLowerCase().contains("fora de servei='true"));
        }

        modelBombesForaServei = new DefaultListModel<>();
        refrescaLlista();
        listBombesForaServei.setModel(modelBombesForaServei);

        btnConfirm.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JCheckBox[] bombes = {chkBomba1, chkBomba2, chkBomba3, chkBomba4};

                for (int i = 0; i < bombes.length; i++) {
                    FrmGestioComponentsCentral.getBombesActivadesTemp()[i] = bombes[i].isSelected();
                }
                refrescaLlista();
                dispose();
            }
        });
    }

    private void refrescaLlista() {
        modelBombesForaServei.clear();
        String estat = adaptador.mostrarSistemaRefrigeracio();
        for (String linia : estat.split("\n")) {
            if (linia.toLowerCase().contains("fora de servei='true")) {
                modelBombesForaServei.addElement(linia.split(",")[0].trim());
            }
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(5, 2, new Insets(10, 10, 10, 10), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(5, 4, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(panel1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        chkBomba4 = new JCheckBox();
        chkBomba4.setText("Activa");
        panel1.add(chkBomba4, new GridConstraints(1, 3, 4, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        chkBomba3 = new JCheckBox();
        chkBomba3.setText("Activa");
        panel1.add(chkBomba3, new GridConstraints(2, 2, 3, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        chkBomba2 = new JCheckBox();
        chkBomba2.setText("Activa");
        panel1.add(chkBomba2, new GridConstraints(3, 1, 2, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        chkBomba1 = new JCheckBox();
        chkBomba1.setText("Activa");
        panel1.add(chkBomba1, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        Bomba1 = new JLabel();
        Bomba1.setText("Bomba 1");
        panel1.add(Bomba1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        Bomba2 = new JLabel();
        Bomba2.setText("Bomba 2");
        panel1.add(Bomba2, new GridConstraints(0, 1, 3, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        Bomba3 = new JLabel();
        Bomba3.setText("Bomba 3");
        panel1.add(Bomba3, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        Bomba4 = new JLabel();
        Bomba4.setText("Bomba 4");
        panel1.add(Bomba4, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        contentPane.add(spacer1, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        contentPane.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        labelSistemaRefri = new JLabel();
        labelSistemaRefri.setHorizontalAlignment(0);
        labelSistemaRefri.setHorizontalTextPosition(0);
        labelSistemaRefri.setText("SISTEMA REFRIGERACIO");
        contentPane.add(labelSistemaRefri, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(200, 100), null, null, 0, false));
        btnConfirm = new JButton();
        btnConfirm.setText("Confirmar");
        contentPane.add(btnConfirm, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        listBombesForaServei = new JList();
        contentPane.add(listBombesForaServei, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        lblForadeServei = new JLabel();
        lblForadeServei.setText("Bombes fora de servei");
        contentPane.add(lblForadeServei, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}
